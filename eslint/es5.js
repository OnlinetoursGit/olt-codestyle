'use strict';

module.exports = {
  rules: {
    // Possible Errors
    'getter-return': ['error', { allowImplicit: true }],
    'no-compare-neg-zero': 'error',
    'no-cond-assign': ['error', 'except-parens'],
    'no-console': 'error',
    'no-constant-condition': ['error', { checkLoops: true }],
    'no-control-regex': 'error',
    'no-debugger': 'error',
    'no-dupe-args': 'error',
    'no-dupe-keys': 'error',
    'no-duplicate-case': 'error',
    'no-empty-character-class': 'error',
    'no-empty': ['warn', { allowEmptyCatch: false }],
    'no-ex-assign': 'error',
    'no-extra-boolean-cast': 'error',
    'no-func-assign': 'error',
    'no-inner-declarations': ['error', 'functions'],
    'no-invalid-regexp': 'error',
    'no-irregular-whitespace': [
      'error',
      {
        skipStrings: true,
        skipComments: true,
        skipRegExps: true,
        skipTemplates: true,
      },
    ],
    'no-obj-calls': 'error',
    'no-prototype-builtins': 'error',
    'no-regex-spaces': 'error',
    'no-sparse-arrays': 'error',
    'no-unreachable': 'error',
    'no-unsafe-finally': 'error',
    'no-unsafe-negation': 'warn',
    'use-isnan': 'error',
    'valid-typeof': ['error', { requireStringLiterals: true }],

    // Best Practices
    'accessor-pairs': [
      'error',
      {
        setWithoutGet: true,
        getWithoutSet: false,
      },
    ],
    'array-callback-return': ['error', { allowImplicit: true }],
    'block-scoped-var': 'warn',
    'consistent-return': ['warn', { treatUndefinedAsUnspecified: false }],
    curly: ['warn', 'multi', 'consistent'],
    'default-case': 'warn',
    'dot-notation': ['warn', { allowKeywords: true }],
    eqeqeq: ['error', 'always', { null: 'never' }],
    'guard-for-in': 'warn',
    'no-alert': 'error',
    'no-caller': 'error',
    'no-div-regex': 'error',
    'no-else-return': ['warn', { allowElseIf: false }],
    'no-empty-function': 'warn',
    'no-eval': ['error', { allowIndirect: false }],
    'no-extend-native': 'error',
    'no-extra-bind': 'error',
    'no-fallthrough': 'warn',
    'no-global-assign': 'error',
    'no-implicit-globals': 'error',
    'no-implied-eval': 'error',
    'no-iterator': 'error',
    'no-labels': [
      'error',
      {
        allowLoop: false,
        allowSwitch: false,
      },
    ],
    'no-lone-blocks': 'error',
    'no-loop-func': 'warn',
    'no-multi-str': 'warn',
    'no-new-func': 'warn',
    'no-new-wrappers': 'error',
    'no-new': 'warn',
    'no-octal-escape': 'error',
    'no-octal': 'error',
    'no-param-reassign': ['warn', { props: false }],
    'no-proto': 'error',
    'no-redeclare': ['error', { builtinGlobals: true }],
    'no-return-assign': ['error', 'except-parens'],
    'no-script-url': 'error',
    'no-self-assign': ['error', { props: true }],
    'no-self-compare': 'error',
    'no-sequences': 'warn',
    'no-throw-literal': 'error',
    'no-unmodified-loop-condition': 'warn',
    'no-unused-expressions': [
      'warn',
      {
        allowShortCircuit: true,
        allowTernary: true,
      },
    ],
    'no-useless-call': 'error',
    'no-useless-concat': 'warn',
    'no-useless-escape': 'warn',
    'no-useless-return': 'error',
    'no-void': 'error',
    'no-with': 'error',
    radix: ['error', 'always'],
    'vars-on-top': 'warn',
    yoda: ['warn', 'never'],

    // Strict Mode
    strict: ['error', 'safe'],

    // Variables
    'no-catch-shadow': 'error',
    'no-delete-var': 'error',
    'no-shadow-restricted-names': 'error',
    'no-shadow': [
      'warn', // Временно, потом error + вернуть builtinGlobals
      {
        builtinGlobals: true,
        hoist: 'all',
      },
    ],
    'no-undef-init': 'error',
    'no-undef': ['error', { typeof: true }],
    'no-unused-vars': [
      'warn',
      {
        vars: 'all',
        args: 'after-used',
        caughtErrors: 'none',
      },
    ],
    'no-use-before-define': [
      'warn',
      {
        functions: false,
        variables: true,
      },
    ],

    // CommonJS
    'global-require': 'warn',
    'no-mixed-requires': [
      'warn',
      {
        grouping: false,
        allowCall: false,
      },
    ],
    'no-new-require': 'error',
    'no-path-concat': 'error',
    'no-process-env': 'warn',

    // Stylistic Issues
    camelcase: ['warn', { properties: 'always' }],
    'consistent-this': ['warn', 'self'],
    'func-name-matching': [
      'warn',
      'always',
      { includeCommonJSModuleExports: false },
    ],
    'func-names': ['warn', 'as-needed'],
    'func-style': ['warn', 'declaration'],
    'linebreak-style': ['warn', 'unix'],
    'multiline-comment-style': ['warn', 'starred-block'],
    'new-cap': [
      'error',
      {
        newIsCap: true,
        capIsNew: true,
        capIsNewExceptionPattern: '^Immutable\\..',
        properties: true,
      },
    ],
    'no-array-constructor': 'error',
    'no-lonely-if': 'error',
    'no-negated-condition': 'warn',
    'no-nested-ternary': 'warn',
    'no-new-object': 'error',
    'no-underscore-dangle': ['warn', { allowAfterThis: true }],
    'no-unneeded-ternary': ['error', { defaultAssignment: false }],
    'one-var': ['warn', { var: 'always' }],
    'operator-assignment': ['warn', 'always'],
    'spaced-comment': ['warn', 'always', { block: { balanced: true } }],
  },
};
